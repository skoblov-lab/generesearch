"""
Django settings for labsite project.

Generated by 'django-admin startproject' using Django 1.11.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
with open(os.path.join(BASE_DIR, 'config.json')) as conf:
    CONFIGS = json.loads(conf.read())

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = CONFIGS['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = CONFIGS["DEBUG"]

ALLOWED_HOSTS = CONFIGS["HOSTS"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'maintenance_mode',
    'info.apps.InfoConfig',
    'services.apps.ServicesConfig',
    'annotation.apps.AnnotationConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'maintenance_mode.middleware.MaintenanceModeMiddleware'
]

ROOT_URLCONF = 'labsite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'labsite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    'annotation': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'anno.sqlite3'),
    }
}

DATABASE_ROUTERS = ['labsite.routing.AnnoRouter']


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Moscow'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = CONFIGS['STATIC_ROOT']
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]


# Cookies
SESSION_ENGINE = "django.contrib.sessions.backends.signed_cookies"
SESSION_COOKIE_HTTPONLY = True

# Maintenance
MAINTENANCE_MODE_STATE_FILE_PATH = os.path.join(BASE_DIR,
                                                'maintenance_mode_state.txt')

# Service commands
SERVICES_ROOT = CONFIGS['SERVICES_ROOT']
if not os.path.isabs(SERVICES_ROOT):
    raise ValueError('the GENERESEARCH_SERVICES env variable is not an abspath')
# SUBMISSION_LIFESPAN_SECONDS = 60 * 60 * 24 * 2  # two days
SUBMISSION_LIFESPAN_SECONDS = CONFIGS["SUBMISSION_LIFESPAN_SECONDS"]

# Media
MEDIA_URL = '/media/'
MEDIA_ROOT = CONFIGS['MEDIA_ROOT']
os.makedirs(MEDIA_ROOT, exist_ok=True)
FILE_UPLOAD_TEMP_DIR = MEDIA_ROOT
FILE_UPLOAD_HANDLERS = [
    'labsite.handlers.FileUploadHandler'
]
FILE_UPLOAD_MAX_MEMORY_SIZE = 20 * 2**20  # 20MB
UPLOAD_EXT_SUFFIX = CONFIGS['UPLOAD_EXT_SUFFIX']

# Celery
CELERY_BROKER_TRANSPORT = 'redis'
CELERY_BROKER_URL = 'redis://localhost'
CELERY_RESULT_BACKEND = 'redis://localhost'
CELERY_IGNORE_RESULT = False
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

# Redirects
# LOGIN_REDIRECT_URL = '/'

if __name__ == '__main__':
    raise RuntimeError
